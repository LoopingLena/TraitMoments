communities[5, 1:ncol(communities)],
communities[9, 1:ncol(communities)],
Trait.1 = traits$Trait.1
)))
selected_communities[selected_communities == 0] <- NA
selected_communities$group <- 0.1
selected_communities[selected_communities$Trait.1 > 0.2, ]$group <- 0.3
selected_communities[selected_communities$Trait.1 > 0.4, ]$group <- 0.5
selected_communities[selected_communities$Trait.1 > 0.6, ]$group <- 0.7
selected_communities[selected_communities$Trait.1 > 0.8, ]$group <- 0.9
hist_data <- selected_communities %>%
group_by(group) %>%
summarise(
Cover1 = sum(" Community.1", na.rm=TRUE)
)
View(selected_communities)
str(selected_communities)
View(selected_communities)
hist_data <- selected_communities %>%
group_by(group) %>%
summarise(
Cover1 = sum(" Community.1", na.rm=TRUE),
Cover5 = sum(Community.5, na.rm=TRUE),
Cover9 = sum(Community.9, na.rm=TRUE)
)
hist_data <- selected_communities %>%
group_by(group) %>%
summarise(
Cover1 = sum( Community.1, na.rm=TRUE),
Cover5 = sum( Community.5, na.rm=TRUE),
Cover9 = sum( Community.9, na.rm=TRUE)
)
hist_data <- selected_communities %>%
group_by(group) %>%
summarise(
Cover1 = sum(' Community.1', na.rm=TRUE),
Cover5 = sum( Community.5, na.rm=TRUE),
Cover9 = sum( Community.9, na.rm=TRUE)
)
names(selected_communities)
hist_data <- selected_communities %>%
group_by(group) %>%
summarise(
Cover1 = sum(1, na.rm=TRUE),
Cover5 = sum(2, na.rm=TRUE),
Cover9 = sum(3, na.rm=TRUE)
)
View(hist_data)
hist_data <- selected_communities %>%
group_by(group) %>%
summarise(
Cover1 = sum(` Community.1`, na.rm=TRUE),
Cover5 = sum(` Community.5`, na.rm=TRUE),
Cover9 = sum(` Community.9`, na.rm=TRUE)
)
View(hist_data)
?barplot
barplot(hist_data$Cover1, hist_data$group)
barplot(hist_data$Cover1)
barplot(hist_data$Cover5)
barplot(hist_data$Cover9)
barplot(hist_data$Cover1)
barplot(hist_data$Cover5)
barplot(hist_data$Cover9)
hist_data
selected_communities <- as.data.frame(t(
rbind(
communities[1, 1:ncol(communities)],
communities[5, 1:ncol(communities)],
communities[9, 1:ncol(communities)],
Trait.1 = traits$Trait.1
)))
selected_communities[selected_communities == 0] <- NA
selected_communities$group <- "0.0 - 0.2"
selected_communities[selected_communities$Trait.1 > 0.2, ]$group <- "0.2 - 0.4"
selected_communities[selected_communities$Trait.1 > 0.4, ]$group <- "0.5 - 0.6"
selected_communities[selected_communities$Trait.1 > 0.6, ]$group <- "0.6 - 0.8"
selected_communities[selected_communities$Trait.1 > 0.8, ]$group <- "0.8 - 1.0"
hist_data <- selected_communities %>%
group_by(group) %>%
summarise(
Cover1 = sum(` Community.1`, na.rm=TRUE),
Cover5 = sum(` Community.5`, na.rm=TRUE),
Cover9 = sum(` Community.9`, na.rm=TRUE)
)
barplot(hist_data$Cover1,xlab="Value",ylab="Frequency", yaxt='n', main = "Community 1 Trait 1")
?barplot
barplot(hist_data$Cover1, names.arg = hist_data$group, xlab="Value",ylab="Frequency", yaxt='n', main = "Community 1 Trait 1")
selected_communities <- as.data.frame(t(
rbind(
communities[1, 1:ncol(communities)],
communities[5, 1:ncol(communities)],
communities[9, 1:ncol(communities)],
Trait.1 = traits$Trait.1
)))
selected_communities[selected_communities == 0] <- NA
selected_communities$group <- "0.0 - 0.2"
selected_communities[selected_communities$Trait.1 > 0.2, ]$group <- "0.2 - 0.4"
selected_communities[selected_communities$Trait.1 > 0.4, ]$group <- "0.5 - 0.6"
selected_communities[selected_communities$Trait.1 > 0.6, ]$group <- "0.6 - 0.8"
selected_communities[selected_communities$Trait.1 > 0.8, ]$group <- "0.8 - 1.0"
hist_data <- selected_communities %>%
group_by(group) %>%
summarise(
Community.1 = sum(` Community.1`, na.rm=TRUE),
Community.5 = sum(` Community.5`, na.rm=TRUE),
Community.9 = sum(` Community.9`, na.rm=TRUE)
)
par(mfrow = c(3, 1))
barplot(hist_data$Community.1, names.arg = hist_data$group, xlab="Value",ylab="Frequency", yaxt='n', main = "Community 1 Trait 1")
barplot(hist_data$Community.5, names.arg = hist_data$group, xlab="Value",ylab="Frequency", yaxt='n', main = "Community 5 Trait 1")
barplot(hist_data$Community.9, names.arg = hist_data$group, xlab="Value",ylab="Frequency", yaxt='n', main = "Community 9 Trait 1")
par(mfrow = c(3, 2))
plot(dens_Community.1_Trait.1$x,length(dens_Community.1_Trait.1$x)*dens_Community.1_Trait.1$y,type="l",xlab="Value",ylab="Frequency", yaxt='n', main = "Community 1 Trait 1", xlim = c(0,1))
plot(dens_Community.5_Trait.1$x,length(dens_Community.5_Trait.1$x)*dens_Community.5_Trait.1$y,type="l",xlab="Value",ylab="Frequency", yaxt='n', main = "Community 5 Trait 1", xlim = c(0,1))
plot(dens_Community.9_Trait.1$x,length(dens_Community.9_Trait.1$x)*dens_Community.9_Trait.1$y,type="l",xlab="Value",ylab="Frequency", yaxt='n', main = "Community 9 Trait 1", xlim = c(0,1))
barplot(hist_data$Community.1, names.arg = hist_data$group, xlab="Value",ylab="Frequency", yaxt='n', main = "Community 1 Trait 1")
barplot(hist_data$Community.5, names.arg = hist_data$group, xlab="Value",ylab="Frequency", yaxt='n', main = "Community 5 Trait 1")
barplot(hist_data$Community.9, names.arg = hist_data$group, xlab="Value",ylab="Frequency", yaxt='n', main = "Community 9 Trait 1")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
#library(tidyverse)
# Chunk 2
library(TraitMoments)
?trait_moments
# Chunk 3
data(trait_moments_data)
communities[1:20,1:5]
traits[1:6,1:ncol(traits)]
# Chunk 4
result1 <- trait_moments(communities = communities, traits = traits)
dim(result1)
result1[1:20,1:ncol(result1)]
# Chunk 5
result2 <- trait_moments(communities = communities, traits = traits, n_species = 1, abundance = 50)
result2[1:20,1:ncol(result2)]
# Chunk 6
# install.packages("tidyverse") # Run if not yet installed
library(tidyverse)
selected_communities <- as.data.frame(t(
rbind(
communities[1, 1:ncol(communities)],
communities[5, 1:ncol(communities)],
communities[9, 1:ncol(communities)],
Trait.1 = traits$Trait.1
)))
selected_communities[selected_communities == 0] <- NA
selected_communities$group <- "0.0 - 0.2"
selected_communities[selected_communities$Trait.1 > 0.2, ]$group <- "0.2 - 0.4"
selected_communities[selected_communities$Trait.1 > 0.4, ]$group <- "0.5 - 0.6"
selected_communities[selected_communities$Trait.1 > 0.6, ]$group <- "0.6 - 0.8"
selected_communities[selected_communities$Trait.1 > 0.8, ]$group <- "0.8 - 1.0"
hist_data <- selected_communities %>%
group_by(group) %>%
summarise(
Community.1 = sum(` Community.1`, na.rm=TRUE),
Community.5 = sum(` Community.5`, na.rm=TRUE),
Community.9 = sum(` Community.9`, na.rm=TRUE))
# Chunk 7
selected_results <- rbind(
result1[1, 1:ncol(result1)],
result1[29, 1:ncol(result1)],
result1[57, 1:ncol(result1)]
)
# install.packages("PearsonDS") # Run if not yet installed
library(PearsonDS)
set.seed(123)
pearson_generation  <- rpearson(10000000,moments=c(mean = selected_results[1,3], variance = selected_results[1,4], skewness = selected_results[1,5], kurtosis = selected_results[1,6]))
dens_Community.1_Trait.1 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = selected_results[2,3], variance = selected_results[2,4], skewness = selected_results[2,5], kurtosis = selected_results[2,6]))
dens_Community.5_Trait.1 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = selected_results[3,3], variance = selected_results[3,4], skewness = selected_results[3,5], kurtosis = selected_results[3,6]))
dens_Community.9_Trait.1 <- density(pearson_generation)
# Chunk 8
par(mfrow = c(3, 2))
plot(dens_Community.1_Trait.1$x,length(dens_Community.1_Trait.1$x)*dens_Community.1_Trait.1$y,type="l",xlab="Value",ylab="Frequency", yaxt='n', main = "Community 1 Trait 1", xlim = c(0,1))
barplot(hist_data$Community.1, names.arg = hist_data$group, xlab="Value",ylab="Frequency", yaxt='n', main = "Community 1 Trait 1")
plot(dens_Community.5_Trait.1$x,length(dens_Community.5_Trait.1$x)*dens_Community.5_Trait.1$y,type="l",xlab="Value",ylab="Frequency", yaxt='n', main = "Community 5 Trait 1", xlim = c(0,1))
barplot(hist_data$Community.5, names.arg = hist_data$group, xlab="Value",ylab="Frequency", yaxt='n', main = "Community 5 Trait 1")
plot(dens_Community.9_Trait.1$x,length(dens_Community.9_Trait.1$x)*dens_Community.9_Trait.1$y,type="l",xlab="Value",ylab="Frequency", yaxt='n', main = "Community 9 Trait 1", xlim = c(0,1))
barplot(hist_data$Community.9, names.arg = hist_data$group, xlab="Value",ylab="Frequency", yaxt='n', main = "Community 9 Trait 1")
plot(dens_Community.1_Trait.1$x,length(dens_Community.1_Trait.1$x)*dens_Community.1_Trait.1$y,type="l",xlab="Value",ylab="Frequency", yaxt='n', main = "Community 1 Trait 1", xlim = c(0,1))
dens_Community.1_Trait.1
plot(dens_Community.1_Trait.1 ,type="l"
,xlab="Value",ylab="Frequency", yaxt='n', main = "Community 1 Trait 1", xlim = c(0,1))
plot(dens_Community.1_Trait.1, dens_Community.9_Trait.1,type="l"
,xlab="Value",ylab="Frequency", yaxt='n', main = "Community 1 Trait 1", xlim = c(0,1))
plot(dens_Community.1_Trait.1, type="l"
,xlab="Value",ylab="Frequency", yaxt='n', main = "Community 1 Trait 1", xlim = c(0,1))
rm(list=ls())
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# rm(list=ls())
# library(tidyverse)
# Chunk 2
library(TraitMoments)
?trait_moments
# Chunk 3
data(trait_moments_data)
communities[1:20,1:5]
traits[1:6,1:ncol(traits)]
# Chunk 4
result1 <- trait_moments(communities = communities, traits = traits)
dim(result1)
result1[1:20,1:ncol(result1)]
# Chunk 5
result2 <- trait_moments(communities = communities, traits = traits, n_species = 1, abundance = 50)
result2[1:20,1:ncol(result2)]
# Chunk 6
# install.packages("tidyverse") # Run if not yet installed
library(tidyverse)
selected_communities <- as.data.frame(t(
rbind(
communities[1, 1:ncol(communities)],
communities[5, 1:ncol(communities)],
communities[9, 1:ncol(communities)],
Trait.1 = traits$Trait.1
)))
selected_communities[selected_communities == 0] <- NA
selected_communities$group <- "0.0 - 0.2"
selected_communities[selected_communities$Trait.1 > 0.2, ]$group <- "0.2 - 0.4"
selected_communities[selected_communities$Trait.1 > 0.4, ]$group <- "0.5 - 0.6"
selected_communities[selected_communities$Trait.1 > 0.6, ]$group <- "0.6 - 0.8"
selected_communities[selected_communities$Trait.1 > 0.8, ]$group <- "0.8 - 1.0"
hist_data <- selected_communities %>%
group_by(group) %>%
summarise(
Community.1 = sum(` Community.1`, na.rm=TRUE),
Community.5 = sum(` Community.5`, na.rm=TRUE),
Community.9 = sum(` Community.9`, na.rm=TRUE))
# Chunk 7
selected_results <- rbind(
result1[1, 1:ncol(result1)],
result1[29, 1:ncol(result1)],
result1[57, 1:ncol(result1)]
)
# install.packages("PearsonDS") # Run if not yet installed
library(PearsonDS)
set.seed(123)
pearson_generation  <- rpearson(10000000,moments=c(mean = selected_results[1,3], variance = selected_results[1,4], skewness = selected_results[1,5], kurtosis = selected_results[1,6]))
dens_Community.1_Trait.1 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = selected_results[2,3], variance = selected_results[2,4], skewness = selected_results[2,5], kurtosis = selected_results[2,6]))
dens_Community.5_Trait.1 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = selected_results[3,3], variance = selected_results[3,4], skewness = selected_results[3,5], kurtosis = selected_results[3,6]))
dens_Community.9_Trait.1 <- density(pearson_generation)
plot(dens_Community.1_Trait.1, type="l", xlab="Value", ylab="Frequency", yaxt='n', main = "Community 1 Trait 1", xlim = c(0,1))
lines(dens_Community.9_Trait.1, lwd = 2, col = "red")
plot(dens_Community.1_Trait.1, type="l", lwd = 5, xlab="Value", ylab="Frequency", yaxt='n', main = "Community 1 Trait 1", xlim = c(0,1))
lines(dens_Community.9_Trait.1, lwd = 5, col = "gray50")
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 1))
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 2))
d1 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 7, variance = 2, skewness = 0, kurtosis = 2))
d2 <- density(pearson_generation)
plot(d1, type="l", lwd = 5, xlab="Value", ylab="Frequency", yaxt='n', main = "Community 1 Trait 1", xlim = c(0, 10))
lines(d2, lwd = 5, col = "gray50")
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d1 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 7, variance = 2, skewness = 0, kurtosis = 4))
d2 <- density(pearson_generation)
plot(d1, type="l", lwd = 5, xlab="Value", ylab="Frequency", yaxt='n', main = "Community 1 Trait 1", xlim = c(0, 10))
lines(d2, lwd = 5, col = "gray50")
plot(d1, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n, main = "", xlim = c(0, 10)))
plot(d1, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "", xlim = c(0, 10))
plot(d1, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', main = "", xlim = c(0, 10))
lines(d2, lwd = 3, col = "gray50")
?plot
?plot
plot(d1, type="l", lwd = 3, xlab="Value", ylab="Frequency", axes='n', main = "", xlim = c(0, 10))
lplotlines(d2, lwd = 3, col = "gray50")
?plot
plot(d1, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "", xlim = c(0, 10))
?plot
plot(d1, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "", xlim = c(0, 10))
lplotlines(d2, lwd = 3, col = "gray50")
lines(d2, lwd = 3, col = "gray50")
plot(d1, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dominance (Mean)", xlim = c(0, 10))
lines(d2, lwd = 3, col = "gray50")
par(mfrow = c(4, 1))
plot(d1, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dominance (Mean)", xlim = c(0, 10))
lines(d2, lwd = 3, col = "gray50")
plot(d3, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dominance (Mean)", xlim = c(0, 10))
lines(d4, lwd = 3, col = "gray50")
d3 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 5, skewness = 0, kurtosis = 4))
d4 <- density(pearson_generation)
plot(d3, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dominance (Mean)", xlim = c(0, 10))
lines(d4, lwd = 3, col = "gray50")
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d1 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 7, variance = 2, skewness = 0, kurtosis = 4))
d2 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d3 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 5, skewness = 0, kurtosis = 4))
d4 <- density(pearson_generation)
par(mfrow = c(4, 1))
plot(d1, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dominance (Mean)", xlim = c(0, 10))
lines(d2, lwd = 3, col = "gray50")
plot(d3, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dominance (Mean)", xlim = c(0, 10))
lines(d4, lwd = 3, col = "gray50")
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = -1, kurtosis = 4))
d4 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 1, kurtosis = 4))
d6 <- density(pearson_generation)
plot(d5, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dispersion (Variance)", xlim = c(0, 10))
lines(d6, lwd = 3, col = "gray50")
par(mfrow = c(4, 1))
plot(d1, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dominance (Mean)", xlim = c(0, 10))
lines(d2, lwd = 3, col = "gray50")
plot(d3, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dispersion (Variance)", xlim = c(0, 10))
lines(d4, lwd = 3, col = "gray50")
plot(d5, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dispersion (Variance)", xlim = c(0, 10))
lines(d6, lwd = 3, col = "gray50")
par(mfrow = c(4, 1))
plot(d1, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dominance (Mean)", xlim = c(0, 10))
lines(d2, lwd = 3, col = "gray50")
plot(d3, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dispersion (Variance)", xlim = c(0, 10))
lines(d4, lwd = 3, col = "gray50")
plot(d5, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dispersion (Variance)", xlim = c(0, 10))
lines(d6, lwd = 3, col = "gray50")
set.seed(123)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d1 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 7, variance = 2, skewness = 0, kurtosis = 4))
d2 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d3 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 4, skewness = 0, kurtosis = 4))
d4 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = -1, kurtosis = 4))
d5 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 1, kurtosis = 4))
d6 <- density(pearson_generation)
par(mfrow = c(4, 1))
plot(d1, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dominance (Mean)", xlim = c(0, 10))
lines(d2, lwd = 3, col = "gray50")
plot(d3, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dispersion (Variance)", xlim = c(0, 10))
lines(d4, lwd = 3, col = "gray50")
plot(d5, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dispersion (Variance)", xlim = c(0, 10))
lines(d6, lwd = 3, col = "gray50")
set.seed(123)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d1 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 7, variance = 2, skewness = 0, kurtosis = 4))
d2 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d3 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 4, skewness = 0, kurtosis = 4))
d4 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d5 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0.5, kurtosis = 4))
d6 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d7 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 6))
d8 <- density(pearson_generation)
par(mfrow = c(4, 1))
plot(d1, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dominance (Mean)", xlim = c(0, 10))
lines(d2, lwd = 3, col = "gray50")
plot(d3, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dispersion (Variance)", xlim = c(0, 10))
lines(d4, lwd = 3, col = "gray50")
plot(d5, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dispersion (Variance)", xlim = c(0, 10))
lines(d6, lwd = 3, col = "gray50")
plot(d7, type="l", lwd = 3, xlab="Value", ylab="Frequency", yaxt='n', xaxt='n', main = "Functional dispersion (Variance)", xlim = c(0, 10))
lines(d8, lwd = 3, col = "gray50")
set.seed(123)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 6))
d8 <- density(pearson_generation)
d8
d7
d6
d8
library(PearsonDS)
set.seed(123)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d1 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 7, variance = 2, skewness = 0, kurtosis = 4))
d2 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d3 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 4, skewness = 0, kurtosis = 4))
d4 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d5 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0.8, kurtosis = 4))
d6 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d7 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 6))
d8 <- density(pearson_generation)
d8
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# rm(list=ls())
# library(tidyverse)
library(data.table)
# Chunk 2
library(PearsonDS)
set.seed(123)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d1 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 7, variance = 2, skewness = 0, kurtosis = 4))
d2 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d3 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 5, skewness = 0, kurtosis = 4))
d4 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d5 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0.9, kurtosis = 4))
d6 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d7 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 6.1))
d8 <- density(pearson_generation)
par(mfrow = c(4, 1))
plot(d1, type="l", lwd = 3, xlab="Trait value", ylab="Frequency", yaxt='n', xaxt='n', main = "Mean (Functional dominance)", xlim = c(0, 10), ylim = c(0, 0.4))
lines(d2, lwd = 3, col = "gray50")
plot(d3, type="l", lwd = 3, xlab="Trait value", ylab="Frequency", yaxt='n', xaxt='n', main = "Variance (Functional dispersion)", xlim = c(0, 10), ylim = c(0, 0.4))
lines(d4, lwd = 3, col = "gray50")
plot(d5, type="l", lwd = 3, xlab="Trait value", ylab="Frequency", yaxt='n', xaxt='n', main = "Skewness (Functional rarity)", xlim = c(0, 10), ylim = c(0, 0.4))
lines(d6, lwd = 3, col = "gray50")
plot(d7, type="l", lwd = 3, xlab="Trait value", ylab="Frequency", yaxt='n', xaxt='n', main = "Kurtosis (Functional evenness)", xlim = c(0, 10), ylim = c(0, 0.4))
lines(d8, lwd = 3, col = "gray50")
# Chunk 3
library(TraitMoments)
?trait_moments
DT(communities)
data.table(communities)
data(trait_moments_data)
data.table(communities)
# rm(list=ls())
# library(tidyverse)
library(DT)
datatable(communities)
datatable(traits)
library(roxygen2)
roxygenise()
9*5
library(roxygen2)
roxygenise()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# rm(list=ls())
# library(tidyverse)
# Chunk 2
library(PearsonDS)
set.seed(123)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d1 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 7, variance = 2, skewness = 0, kurtosis = 4))
d2 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d3 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 5, skewness = 0, kurtosis = 4))
d4 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d5 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0.9, kurtosis = 4))
d6 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 4))
d7 <- density(pearson_generation)
pearson_generation  <- rpearson(10000000,moments=c(mean = 5, variance = 2, skewness = 0, kurtosis = 6.1))
d8 <- density(pearson_generation)
par(mfrow = c(4, 1))
plot(d1, type="l", lwd = 3, xlab="Trait value", ylab="Frequency", yaxt='n', xaxt='n', main = "Mean (Functional dominance)", xlim = c(0, 10), ylim = c(0, 0.4))
lines(d2, lwd = 3, col = "gray50")
plot(d3, type="l", lwd = 3, xlab="Trait value", ylab="Frequency", yaxt='n', xaxt='n', main = "Variance (Functional dispersion)", xlim = c(0, 10), ylim = c(0, 0.4))
lines(d4, lwd = 3, col = "gray50")
plot(d5, type="l", lwd = 3, xlab="Trait value", ylab="Frequency", yaxt='n', xaxt='n', main = "Skewness (Functional rarity)", xlim = c(0, 10), ylim = c(0, 0.4))
lines(d6, lwd = 3, col = "gray50")
plot(d7, type="l", lwd = 3, xlab="Trait value", ylab="Frequency", yaxt='n', xaxt='n', main = "Kurtosis (Functional evenness)", xlim = c(0, 10), ylim = c(0, 0.4))
lines(d8, lwd = 3, col = "gray50")
# Chunk 3
library(TraitMoments)
?trait_moments
# Chunk 4
data(trait_moments_data)
communities[1:9,1:6]
traits[1:6,1:5]
# Chunk 5
result1 <- trait_moments(communities = communities, traits = traits)
dim(result1)
result1[1:20,1:ncol(result1)]
# Chunk 6
result2 <- trait_moments(communities = communities, traits = traits, n_species = 1, abundance = 50)
result2[1:20,1:ncol(result2)]
# Chunk 7
# install.packages("tidyverse") # Run if not yet installed
library(tidyverse)
selected_communities <- as.data.frame(t(
rbind(
communities[1, 1:ncol(communities)],
communities[5, 1:ncol(communities)],
communities[9, 1:ncol(communities)],
Trait.1 = traits$Trait.1
)))
selected_communities[selected_communities == 0] <- NA
selected_communities$group <- "0.0 - 0.2"
selected_communities[selected_communities$Trait.1 > 0.2, ]$group <- "0.2 - 0.4"
selected_communities[selected_communities$Trait.1 > 0.4, ]$group <- "0.5 - 0.6"
selected_communities[selected_communities$Trait.1 > 0.6, ]$group <- "0.6 - 0.8"
selected_communities[selected_communities$Trait.1 > 0.8, ]$group <- "0.8 - 1.0"
hist_data <- selected_communities %>%
group_by(group) %>%
summarise(
Community.1 = sum(` Community.1`, na.rm=TRUE),
Community.5 = sum(` Community.5`, na.rm=TRUE),
Community.9 = sum(` Community.9`, na.rm=TRUE))
result1
